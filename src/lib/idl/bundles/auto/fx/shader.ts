// automatically generated by the FlatBuffers compiler, do not modify

import { PixelShader, PixelShaderT } from '../fx/pixel-shader';
import { VertexShader, VertexShaderT } from '../fx/vertex-shader';


export enum Shader {
  NONE = 0,
  VertexShader = 1,
  PixelShader = 2
}

export function unionToShader(
  type: Shader,
  accessor: (obj:PixelShader|VertexShader) => PixelShader|VertexShader|null
): PixelShader|VertexShader|null {
  switch(Shader[type]) {
    case 'NONE': return null; 
    case 'VertexShader': return accessor(new VertexShader())! as VertexShader;
    case 'PixelShader': return accessor(new PixelShader())! as PixelShader;
    default: return null;
  }
}

export function unionListToShader(
  type: Shader, 
  accessor: (index: number, obj:PixelShader|VertexShader) => PixelShader|VertexShader|null, 
  index: number
): PixelShader|VertexShader|null {
  switch(Shader[type]) {
    case 'NONE': return null; 
    case 'VertexShader': return accessor(index, new VertexShader())! as VertexShader;
    case 'PixelShader': return accessor(index, new PixelShader())! as PixelShader;
    default: return null;
  }
}
