// automatically generated by the FlatBuffers compiler, do not modify

import { RoutineBytecodeBundle, RoutineBytecodeBundleT } from '../fx/routine-bytecode-bundle';
import { RoutineShaderBundle, RoutineShaderBundleT } from '../fx/routine-shader-bundle';


export enum RoutineBundle {
  NONE = 0,
  RoutineBytecodeBundle = 1,
  RoutineShaderBundle = 2
}

export function unionToRoutineBundle(
  type: RoutineBundle,
  accessor: (obj:RoutineBytecodeBundle|RoutineShaderBundle) => RoutineBytecodeBundle|RoutineShaderBundle|null
): RoutineBytecodeBundle|RoutineShaderBundle|null {
  switch(RoutineBundle[type]) {
    case 'NONE': return null; 
    case 'RoutineBytecodeBundle': return accessor(new RoutineBytecodeBundle())! as RoutineBytecodeBundle;
    case 'RoutineShaderBundle': return accessor(new RoutineShaderBundle())! as RoutineShaderBundle;
    default: return null;
  }
}

export function unionListToRoutineBundle(
  type: RoutineBundle, 
  accessor: (index: number, obj:RoutineBytecodeBundle|RoutineShaderBundle) => RoutineBytecodeBundle|RoutineShaderBundle|null, 
  index: number
): RoutineBytecodeBundle|RoutineShaderBundle|null {
  switch(RoutineBundle[type]) {
    case 'NONE': return null; 
    case 'RoutineBytecodeBundle': return accessor(index, new RoutineBytecodeBundle())! as RoutineBytecodeBundle;
    case 'RoutineShaderBundle': return accessor(index, new RoutineShaderBundle())! as RoutineShaderBundle;
    default: return null;
  }
}
