S : Program
Program : --add
Program : Decls

Decls : Decl --expose
Decls : Decls Decl

Decl : ';'
Decl : TypeDecl
Decl : VariableDecl
Decl : VarStructDecl
Decl : FunctionDecl
#if TECHNIQUE9_DEPRECATED_SUPPORT
    Decl : TechniqueDecl
#endif
Decl : Technique11Decl
Decl : UseDecl
#if FX_PART
    Decl : ImportDecl
    Decl : ProvideDecl
#endif
Decl : CbufferDecl
Decl : TbufferDecl
Decl : ERROR

#if FX_PART
    Decl : PartFxDecl
    ImportDecl : T_KW_IMPORT String ';'
    ProvideDecl : T_KW_PROVIDE ComplexNameOpt ';'
# ProvideDecl : T_KW_PROVIDE ComplexNameOpt T_KW_AS ComplexNameOpt ';'
#endif 

UseDecl : T_KW_USE Mode
Mode : T_KW_STRICT

Usages : Usage --expose
Usages : Usages Usage
Usage : T_KW_STATIC --add
Usage : T_KW_NOINTERPOLATION
Usage : T_KW_CENTROID
Usage : T_KW_NOPERSPECTIVE
Usage : T_KW_UNIFORM
Usage : T_KW_EXTERN
Usage : T_KW_VOLATILE
Usage : T_KW_INLINE
Usage : T_KW_UNSIGNED
Usage : T_KW_PRECISE
Usage : ConstUsage

ConstUsages : ConstUsage --expose
ConstUsages : ConstUsages ConstUsage
ConstUsage : T_KW_CONST
ConstUsage : T_KW_ROW_MAJOR
ConstUsage : T_KW_COLUMN_MAJOR

UsageType : Type --add
UsageType : Usages Type

UsageStructDecl : StructDecl --add
UsageStructDecl : Usages StructDecl

TypeDecl : T_KW_TYPEDEF ConstType TypeDefs --F addTypeDef ';' --add
TypeDecl : T_KW_TYPEDEF ConstStructDecl TypeDefs --F addTypeDef ';'
TypeDecl : StructDecl ';'
TypeDefs : VariableDim
TypeDefs : VariableDim ',' TypeDefs

Type : BaseType --add
Type : Struct
Type : TypeId
Type : T_KW_STRUCT TypeId

ConstType : Type --add
ConstType : ConstUsages Type
ConstTypeDim : ConstType --expose
ConstTypeDim : ConstTypeDim '[' ConstantExpr ']'

BaseType : T_KW_VOID --add
BaseType : ScalarType
BaseType : VectorType
BaseType : MatrixType
BaseType : ObjectType

ScalarType : T_KW_BOOL --add
ScalarType : T_KW_INT
# ScalarType : T_KW_UNSIGNED T_KW_INT
ScalarType : T_KW_UINT
ScalarType : T_KW_HALF
ScalarType : T_KW_FLOAT
ScalarType : T_KW_DOUBLE

VectorType : T_KW_VECTOR --add
VectorType : T_KW_VECTOR '<' ScalarType ',' AddExpr '>'

MatrixType : T_KW_MATRIX --add
MatrixType : T_KW_MATRIX '<' ScalarType ',' ConstantExpr ',' AddExpr '>'

ObjectType : T_KW_STRING --add
ObjectType : T_KW_TEXTURE
ObjectType : T_KW_TEXTURE1D
ObjectType : T_KW_TEXTURE2D
ObjectType : T_KW_TEXTURE2D '<' Type '>'
#if FX_PART
    ObjectType : T_KW_TRIMESH '<' Type '>'
#endif
ObjectType : T_KW_TEXTURE2DARRAY
ObjectType : T_KW_TEXTURE3D
ObjectType : T_KW_TEXTURE3D '<' Type '>'
ObjectType : T_KW_TEXTURECUBE
ObjectType : T_KW_TEXTURECUBEARRAY
#if TECHNIQUE9_DEPRECATED_SUPPORT
    # ObjectType : T_KW_SAMPLER
    # ObjectType : T_KW_SAMPLER1D
    # ObjectType : T_KW_SAMPLER2D
    # ObjectType : T_KW_SAMPLER3D
    # ObjectType : T_KW_SAMPLERCUBE
    # ObjectType : T_KW_STATEBLOCK
#endif
ObjectType : T_KW_SAMPLER_STATE
ObjectType : T_KW_SAMPLER_COMPARISON_STATE
ObjectType : T_KW_DEPTH_STENCIL_STATE
#if TECHNIQUE9_DEPRECATED_SUPPORT
    # ObjectType : T_KW_PIXELSHADER
    # ObjectType : T_KW_VERTEXSHADER
    # ObjectType : T_KW_PIXELFRAGMENT
    # ObjectType : T_KW_VERTEXFRAGMENT
#endif
ObjectType : T_KW_RWTEXTURE1D '<' Type '>'
ObjectType : T_KW_RWTEXTURE2D '<' Type '>'
ObjectType : T_KW_RWTEXTURE3D '<' Type '>'
ObjectType : T_KW_BUFFER '<' Type '>'
ObjectType : T_KW_RWBUFFER '<' Type '>'
ObjectType : T_KW_RWSTRUCTUREDBUFFER '<' Type '>'
ObjectType : T_KW_STRUCTUREDBUFFER '<' Type '>'
ObjectType : T_KW_APPENDSTRUCTUREDBUFFER '<' Type '>'

Struct : T_KW_STRUCT '{' '}' --add
Struct : T_KW_STRUCT '{' StructDecls '}'
StructDecl : T_KW_STRUCT Id --F addType '{' '}' --add
StructDecl : T_KW_STRUCT Id --F addType '{' UseDecl StructDecls '}'
StructDecl : T_KW_STRUCT Id --F addType '{' StructDecls '}'

ConstStructDecl : StructDecl
ConstStructDecl : ConstUsages StructDecl

StructDecls : VariableDecl --expose 
StructDecls : VarStructDecl --expose 
StructDecls : VariableDecl StructDecls
StructDecls : VarStructDecl StructDecls

Semantic : ':' Id --add
Semantic : ':' T_KW_REGISTER '(' Register ')'
Semantics : Semantic
Semantics : Semantics Semantic
SemanticsOpt :
SemanticsOpt : Semantics

Register : Id
Register : Target ',' Id

Annotation : AnnotationBegin AnnotationEnd  --add
Annotation : AnnotationBegin AnnotationDecls AnnotationEnd
AnnotationOpt :
AnnotationOpt : Annotation
AnnotationBegin : '<'
AnnotationDecls : VariableDecl
AnnotationDecls : VariableDecl AnnotationDecls
AnnotationEnd : '>'

Initializer : '=' AssignmentExpr --add
Initializer : '=' ERROR --add
Initializer : '=' '{' InitExprs '}'
Initializer : '=' '{' InitExprs ',' '}'
Initializer : StateBlock

VariableDecl : UsageType Variables ';' --add
VariableDecl : UsageType Variables ERROR --add
VarStructDecl : UsageStructDecl Variables ';' --add

Variables : Variable --expose
Variables : Variables ',' Variable
# Variables : Variables ERROR Variable
Variables : Variables ',' ERROR
Variable : VariableDim SemanticsOpt AnnotationOpt Initializer --add
Variable : VariableDim SemanticsOpt AnnotationOpt --add
VariableDim : NonTypeId --add
VariableDim : VariableDim '[' ConstantExpr ']'


FunctionDecl : Attributes FunctionDef ';' --add
FunctionDecl : FunctionDef ';' --add
FunctionDecl : Attributes FunctionDef AnnotationOpt StmtBlock
FunctionDecl : FunctionDef AnnotationOpt StmtBlock

# TODO: remove it;
FunctionDecl : Attributes FunctionDef AnnotationOpt ERROR
FunctionDecl : FunctionDef AnnotationOpt ERROR

FunctionDef : UsageType NonTypeId ParamList SemanticsOpt

Attribute : '[' Id '(' ArgumentsOpt ')' ']'
Attribute : '[' Id ']'
Attributes : Attribute --expose
Attributes : Attributes Attribute
AttributesOpt : --expose
AttributesOpt : Attributes

ParamList : '(' ')'
ParamList : '(' T_KW_VOID ')'
ParamList : '(' ParameterDecls ')'

ParameterDecls : ParameterDecl --expose
ParameterDecls : ParameterDecls ',' ParameterDecl
ParameterDecls : ParameterDecls ERROR ParameterDecl
ParameterDecls : ParameterDecls ',' ERROR
ParameterDecls : ERROR
ParameterDecl : ParamUsageType Variable

ParamUsageType : Type --add
ParamUsageType : ParamUsages Type

ParamUsages : ParamUsage --expose
ParamUsages : ParamUsages ParamUsage
ParamUsage : T_KW_IN --add
ParamUsage : T_KW_OUT
ParamUsage : T_KW_INOUT
ParamUsage : T_KW_UNIFORM
ParamUsage : ConstUsage

#if TECHNIQUE9_DEPRECATED_SUPPORT
    TechniqueDecl : T_KW_TECHNIQUE ComplexNameOpt SemanticsOpt AnnotationOpt TechniqueBody --add
    TechniqueBody : '{' '}'  --add
    TechniqueBody : '{' PassDecls '}'
#endif 

Technique11Decl : T_KW_TECHNIQUE11 ComplexNameOpt SemanticsOpt AnnotationOpt Technique11Body --add
Technique11Body : '{' '}'  --add
Technique11Body : '{' Pass11Decls '}'

CbufferDecl : T_KW_CBUFFER IdOpt SemanticsOpt AnnotationOpt '{' StructDecls '}' ';' --add
CbufferDecl : T_KW_CBUFFER IdOpt SemanticsOpt AnnotationOpt '{' '}' ';' --add
TbufferDecl : T_KW_TBUFFER IdOpt SemanticsOpt AnnotationOpt '{' StructDecls '}' ';' --add
TbufferDecl : T_KW_TBUFFER IdOpt SemanticsOpt AnnotationOpt '{' '}' ';' --add

ComplexNameOpt : ComplexName --add
ComplexName : Id --expose
ComplexName : ComplexName '.' Id

#if PRESETS_EX
    PresetDecl : T_KW_PRESET Id AnnotationOpt PassStateBlock --add
#endif

#if TECHNIQUE9_DEPRECATED_SUPPORT
    PassDecls : PassDecl --expose
    PassDecls : PassDecls PassDecl
    PassDecl : T_KW_PASS IdOpt AnnotationOpt PassStateBlock --add
    #if PRESETS_EX
    PassDecl : PresetDecl
    #endif
    PassDecl : ';'
#endif

Pass11Decls : Pass11Decl --expose
Pass11Decls : Pass11Decls Pass11Decl
Pass11Decl : T_KW_PASS IdOpt AnnotationOpt StmtBlock --add
Pass11Decl : ';'

#if TECHNIQUE9_DEPRECATED_SUPPORT
    PassStateBlock : '{' '}' --add
    PassStateBlock : '{' PassStates '}'
    PassStates : PassState --expose
    PassStates : PassStates PassState

    PassState : Id StateIndex '=' PassStateExpr ';' --add
#endif

# todo: move all particles declarations to separate grammar!
#if FX_PART
    PartFxDecl : T_KW_FXPART ComplexNameOpt SemanticsOpt AnnotationOpt PartFxBody --add

    PartFxBody : '{' '}' 
    PartFxBody : '{' PartFxProperties '}'

    PartFxProperties : PartFxProperty --expose
    PartFxProperties : PartFxProperties PartFxProperty
    PartFxProperty : PassState
    PartFxProperty : PassDecl
#endif // FX_PART

StateBlock : '{' '}' --add
StateBlock : '{' States '}'
StateBlock : '{' StateBlockItems '}'
StateBlockItems : StateBlock  --expose
StateBlockItems : StateBlock ',' StateBlockItems
State : Id StateIndex '=' StateExpr ';' --add
States : State --expose
States : States State

StateIndex :
StateIndex : '[' Uint ']'

StmtBlock : '{' '}' --add
StmtBlock : '{' Stmts '}'  

Stmts : Stmt --expose
Stmts : Stmts Stmt

# SimpleStmt : ERROR ';' 
# SimpleStmt : ';' --add

SimpleStmt : Expr ';'
SimpleStmt : Expr ERROR
SimpleStmt : T_KW_RETURN ';'
SimpleStmt : T_KW_RETURN Expr ';'
SimpleStmt : T_KW_RETURN ERROR ';'
SimpleStmt : T_KW_DO Stmt T_KW_WHILE '(' Expr ')' ';'
SimpleStmt : T_KW_DO Stmt T_KW_WHILE '(' ERROR ')' ';'
SimpleStmt : StmtBlock
SimpleStmt : T_KW_DISCARD ';'
SimpleStmt : TypeDecl
SimpleStmt : VariableDecl --add
SimpleStmt : VarStructDecl
SimpleStmt : T_KW_BREAK ';'
SimpleStmt : T_KW_BREAK ERROR
SimpleStmt : T_KW_CONTINUE ';'
SimpleStmt : T_KW_CONTINUE ERROR

#if FX_PART
    SimpleStmt : T_KW_SPAWN '(' Expr ')' NonTypeId '(' ArgumentsOpt ')' ';'
    SimpleStmt : T_KW_DRAW NonTypeId '(' ArgumentsOpt ')' ';'
#endif


NonIfStmt : SimpleStmt --add
NonIfStmt : ';'
NonIfStmt : WhileStmt NonIfStmt
NonIfStmt : ForStmt NonIfStmt

Stmt : SimpleStmt --add
Stmt : UseDecl
Stmt : WhileStmt Stmt
Stmt : ForStmt Stmt
Stmt : IfStmt Stmt
Stmt : IfStmt NonIfStmt T_KW_ELSE Stmt
Stmt : ERROR
Stmt : ';'

IfStmt : AttributesOpt T_KW_IF '(' Expr ')' --expose
IfStmt : AttributesOpt T_KW_IF '(' ERROR ')' --expose

WhileStmt : T_KW_WHILE '(' Expr ')' --expose
WhileStmt : T_KW_WHILE '(' ERROR ')' --expose

ForStmt : AttributesOpt For '(' ForInit ForCond ForStep ')' --expose
ForStmt : AttributesOpt For ERROR --expose

For : T_KW_FOR

ForInit : ';' --add
ForInit : Expr ';'
ForInit : VariableDecl
ForInit : ERROR ';'

ForCond : ';' --add
ForCond : Expr ';'
ForCond : ERROR ';'

ForStep : --add
ForStep : Expr
ForStep : ERROR

DwordExpr : Dword
DwordExpr : Dword '|' DwordExpr

DwordExprSeq : DwordExpr --expose
DwordExprSeq : DwordExpr ',' DwordExprSeq

#if TECHNIQUE9_DEPRECATED_SUPPORT
    PassStateExpr : DwordExpr --add
    PassStateExpr : ComplexExpr
    PassStateExpr : String
    PassStateExpr : '{' DwordExprSeq '}'
#endif

StateExpr : DwordExpr --add
StateExpr : ComplexExpr
StateExpr : '{' InitExprs '}'
StateExpr : '{' InitExprs ',' '}'
StateExpr : '<' RelationalExpr '>'

SimpleExpr : T_KW_TRUE
SimpleExpr : T_KW_FALSE
SimpleExpr : Uint
SimpleExpr : Float
SimpleExpr : String
SimpleExpr : NonTypeId

ComplexExpr : '(' Expr ')'
ComplexExpr : TypeId '(' ArgumentsOpt ')'
ComplexExpr : BaseType '(' ArgumentsOpt ')' 
ComplexExpr : NonTypeId '(' ArgumentsOpt ')'
ComplexExpr : PostfixPointExpr '(' ArgumentsOpt ')'
ComplexExpr : ObjectExpr

#if TECHNIQUE9_DEPRECATED_SUPPORT
    ObjectExpr : T_KW_COMPILE NonTypeId '(' ArgumentsOpt ')'
    ObjectExpr : T_KW_COMPILE_FRAGMENT Target NonTypeId '(' ArgumentsOpt ')'
#endif

ObjectExpr : T_KW_COMPILE_SHADER '(' ArgumentsOpt ')'

#if TECHNIQUE9_DEPRECATED_SUPPORT
    # ObjectExpr : T_KW_SAMPLER_STATE StateBlock
    # ObjectExpr : T_KW_STATEBLOCK_STATE StateBlocStateBlockk
#endif

PrimaryExpr : ComplexExpr
PrimaryExpr : SimpleExpr
PostfixExpr : PrimaryExpr
PostfixExpr : PostfixExpr '[' Expr ']'
PostfixExpr : PostfixExpr '[' ERROR ']'
PostfixExpr : PostfixExpr '.' Id
PostfixExpr : PostfixExpr T_OP_INC
PostfixExpr : PostfixExpr T_OP_DEC

PostfixPointExpr : PostfixExpr '.' Id

UnaryExpr : PostfixExpr
UnaryExpr : T_OP_INC UnaryExpr
UnaryExpr : T_OP_DEC UnaryExpr
# UnaryExpr : T_OP_INC ERROR
# UnaryExpr : T_OP_DEC ERROR
UnaryExpr : '!' CastExpr
UnaryExpr : '~' CastExpr
# UnaryExpr : '!' ERROR
UnaryExpr : '-' CastExpr
UnaryExpr : '+' CastExpr

CastExpr : UnaryExpr
CastExpr : '(' ConstTypeDim ')' CastExpr
CastExpr : '(' ERROR ')' CastExpr

MulExpr : CastExpr
MulExpr : MulExpr '*' CastExpr
MulExpr : MulExpr '/' CastExpr
MulExpr : MulExpr '%' CastExpr

MulExpr : ERROR '*' CastExpr
MulExpr : ERROR '/' CastExpr
MulExpr : ERROR '%' CastExpr
MulExpr : MulExpr '*' ERROR
MulExpr : MulExpr '/' ERROR
MulExpr : MulExpr '%' ERROR
# MulExpr : ERROR '*' ERROR
# MulExpr : ERROR '/' ERROR
# MulExpr : ERROR '%' ERROR

AddExpr : MulExpr
AddExpr : AddExpr '+' MulExpr
AddExpr : AddExpr '-' MulExpr

AddExpr : AddExpr '+' ERROR
AddExpr : AddExpr '-' ERROR

ShiftExpr : AddExpr
ShiftExpr : ShiftExpr T_OP_SL AddExpr
ShiftExpr : ShiftExpr T_OP_SR AddExpr

ShiftExpr : ShiftExpr T_OP_SR ERROR
ShiftExpr : ShiftExpr T_OP_SL ERROR

RelationalExpr : ShiftExpr
RelationalExpr : RelationalExpr '<' ShiftExpr
RelationalExpr : RelationalExpr '>' ShiftExpr
RelationalExpr : RelationalExpr T_OP_LE ShiftExpr
RelationalExpr : RelationalExpr T_OP_GE ShiftExpr

RelationalExpr : ERROR '<' ShiftExpr
RelationalExpr : RelationalExpr '<' ERROR
RelationalExpr : ERROR '<' ERROR

RelationalExpr : RelationalExpr '>' ERROR
RelationalExpr : ERROR '>' ShiftExpr
RelationalExpr : ERROR '>' ERROR

RelationalExpr : RelationalExpr T_OP_LE ERROR
RelationalExpr : ERROR T_OP_LE ShiftExpr
RelationalExpr : ERROR T_OP_LE ERROR

RelationalExpr : RelationalExpr T_OP_GE ERROR
RelationalExpr : ERROR T_OP_GE ShiftExpr
RelationalExpr : ERROR T_OP_GE ERROR

EqualityExpr : RelationalExpr
EqualityExpr : EqualityExpr T_OP_EQ RelationalExpr
EqualityExpr : EqualityExpr T_OP_NE RelationalExpr
EqualityExpr : ERROR T_OP_EQ RelationalExpr
EqualityExpr : EqualityExpr T_OP_NE ERROR
EqualityExpr : ERROR T_OP_NE ERROR

AndExpr : EqualityExpr
AndExpr : AndExpr '&' EqualityExpr
AndExpr : ERROR '&' EqualityExpr
AndExpr : AndExpr '&' ERROR

ExclusiveOrExpr : AndExpr
ExclusiveOrExpr : ExclusiveOrExpr '^' AndExpr
ExclusiveOrExpr : ERROR '^' AndExpr
ExclusiveOrExpr : ExclusiveOrExpr '^' ERROR

InclusiveOrExpr : ExclusiveOrExpr
InclusiveOrExpr : InclusiveOrExpr '|' ExclusiveOrExpr
InclusiveOrExpr : ERROR '|' ExclusiveOrExpr
InclusiveOrExpr : InclusiveOrExpr '|' ERROR

LogicalAndExpr : InclusiveOrExpr
LogicalAndExpr : LogicalAndExpr T_OP_AND InclusiveOrExpr
LogicalAndExpr : ERROR T_OP_AND InclusiveOrExpr
LogicalAndExpr : LogicalAndExpr T_OP_AND ERROR

LogicalOrExpr : LogicalAndExpr
LogicalOrExpr : LogicalOrExpr T_OP_OR LogicalAndExpr
LogicalOrExpr : ERROR T_OP_OR LogicalAndExpr
LogicalOrExpr : LogicalOrExpr T_OP_OR ERROR

ConditionalExpr : LogicalOrExpr
ConditionalExpr : LogicalOrExpr '?' AssignmentExpr ':' ConditionalExpr
ConditionalExpr : ERROR '?' AssignmentExpr ':' ConditionalExpr
ConditionalExpr : LogicalOrExpr '?' ERROR ':' ConditionalExpr
ConditionalExpr : LogicalOrExpr '?' AssignmentExpr ':' ERROR
ConditionalExpr : LogicalOrExpr '?' ERROR ':' ERROR
ConditionalExpr : ERROR '?' ERROR ':' ERROR
ConditionalExpr : ERROR '?' ERROR ':' ConditionalExpr

AssignmentExpr : ConditionalExpr
AssignmentExpr : CastExpr '=' AssignmentExpr
AssignmentExpr : CastExpr T_OP_ME AssignmentExpr
AssignmentExpr : CastExpr T_OP_DE AssignmentExpr
AssignmentExpr : CastExpr T_OP_RE AssignmentExpr
AssignmentExpr : CastExpr T_OP_AE AssignmentExpr
AssignmentExpr : CastExpr T_OP_SE AssignmentExpr
AssignmentExpr : CastExpr T_OP_BORE AssignmentExpr
AssignmentExpr : CastExpr T_OP_BANDE AssignmentExpr
AssignmentExpr : CastExpr T_OP_XORE AssignmentExpr
AssignmentExpr : CastExpr T_OP_SRE AssignmentExpr
AssignmentExpr : CastExpr T_OP_SLE AssignmentExpr

Arguments : AssignmentExpr --expose
Arguments : Arguments ',' AssignmentExpr
Arguments : Arguments ERROR AssignmentExpr
Arguments : Arguments ',' ERROR
ArgumentsOpt : --expose
ArgumentsOpt : Arguments

InitExpr : AssignmentExpr --add
InitExpr : '{' InitExprs '}'
InitExpr : '{' InitExprs ',' '}'
InitExprs : InitExpr --expose
InitExprs : InitExprs ',' InitExpr

ConstantExpr : AssignmentExpr
Expr : AssignmentExpr
Expr : Expr ',' AssignmentExpr
Expr : Expr ',' ERROR
Expr : ERROR ',' ERROR
Expr : ERROR ',' AssignmentExpr

Dword : Uint
Dword : '-' Uint
Dword : Float
Dword : '-' Float
Dword : DwordId
Dword : Uint DwordId
DwordId : Id
DwordId : T_KW_TRUE
DwordId : T_KW_FALSE
DwordId : T_KW_TEXTURE

Id : TypeId
Id : NonTypeId
IdOpt :
IdOpt : Id

Target : NonTypeId

Uint : T_UINT
Float : T_FLOAT

Strings : String
Strings : Strings String
String : T_STRING

TypeId : T_TYPE_ID
NonTypeId : T_NON_TYPE_ID

LineTerminator : T_LINE_TERMINATOR

AsmDecl : T_KW_DECL '{'
Asm : T_KW_ASM '{'
AsmFragment : T_KW_ASM_FRAGMENT '{'

--LEXER--

T_KW_UNSIGNED : "unsigned"
T_KW_PRECISE : "precise"
T_KW_STATIC : "static"
T_KW_NOINTERPOLATION : "nointerpolation"
T_KW_CENTROID : "centroid"
T_KW_NOPERSPECTIVE : "noperspective"
T_KW_UNIFORM : "uniform"
T_KW_EXTERN : "extern"
T_KW_VOLATILE : "volatile"
T_KW_INLINE : "inline"
T_KW_CONST : "const"
T_KW_ROW_MAJOR : "row_major"
T_KW_COLUMN_MAJOR : "column_major"
T_KW_TYPEDEF : "typedef"
T_KW_STRUCT : "struct"
T_KW_VOID : "void"
T_KW_BOOL : "bool"
T_KW_INT : "int"
T_KW_UINT : "uint"
T_KW_HALF : "half"
T_KW_FLOAT : "float"
T_KW_DOUBLE : "double"
T_KW_VECTOR : "vector"
T_KW_MATRIX : "matrix"
T_KW_STRING : "string"
T_KW_TEXTURE : "Texture"
T_KW_TEXTURE1D : "Texture1D"
T_KW_TEXTURE2D : "Texture2D"
T_KW_TEXTURE2DARRAY : "Texture2DArray"
T_KW_TEXTURE3D : "Texture3D"
T_KW_TEXTURECUBE : "TextureCube"
T_KW_TEXTURECUBEARRAY : "TextureCubeArray"
T_KW_CBUFFER : "cbuffer"
T_KW_TBUFFER : "tbuffer"
#if TECHNIQUE9_DEPRECATED_SUPPORT
    # T_KW_SAMPLER : "sampler"
    # T_KW_SAMPLER1D : "sampler1D"
    # T_KW_SAMPLER2D : "sampler2D"
    # T_KW_SAMPLER3D : "sampler3D"
    # T_KW_SAMPLERCUBE : "samplerCUBE"
    # T_KW_STATEBLOCK : "stateblock"
    # T_KW_STATEBLOCK_STATE : "stateblock_state"
#endif
T_KW_SAMPLER_STATE : "SamplerState"
T_KW_SAMPLER_COMPARISON_STATE : "SamplerComparisonState"
T_KW_DEPTH_STENCIL_STATE : "DepthStencilState"
T_KW_BLEND_STATE : "BlendState"
T_KW_RASTERIZER_STATE : "RasterizerState"
T_KW_BUFFER : "Buffer"
T_KW_RWTEXTURE1D : "RWTexture1D"
T_KW_RWTEXTURE2D : "RWTexture2D"
T_KW_RWTEXTURE3D : "RWTexture3D"
T_KW_RWBUFFER : "RWBuffer"
T_KW_STRUCTUREDBUFFER : "StructuredBuffer"
T_KW_RWSTRUCTUREDBUFFER : "RWStructuredBuffer"
T_KW_APPENDSTRUCTUREDBUFFER : "AppendStructuredBuffer"
#if TECHNIQUE9_DEPRECATED_SUPPORT
    # T_KW_PIXELSHADER : "pixelshader"
    # T_KW_VERTEXSHADER : "vertexshader"
    # T_KW_PIXELFRAGMENT : "pixelfragment"
    # T_KW_VERTEXFRAGMENT : "vertexfragment"
#endif
T_KW_REGISTER : "register"
T_KW_IN : "in"
T_KW_OUT : "out"
T_KW_INOUT : "inout"
T_KW_TECHNIQUE : "technique"
T_KW_TECHNIQUE11 : "technique11"
#if PRESETS_EX
    T_KW_PRESET : "preset"
#endif
#if FX_PART
    T_KW_FXPART : "partFx"
    T_KW_TRIMESH : "TriMesh"
#endif
T_KW_PASS : "pass"
T_KW_RETURN : "return"
T_KW_DO : "do"
T_KW_DISCARD : "discard"
T_KW_WHILE : "while"
T_KW_IF : "if"
T_KW_ELSE : "else"
T_KW_FOR : "for"
T_KW_TRUE : "true"
T_KW_FALSE : "false"
#if TECHNIQUE9_DEPRECATED_SUPPORT
    T_KW_COMPILE : "compile"
    T_KW_COMPILE_SHADER : "CompileShader"
#endif
T_KW_COMPILE_FRAGMENT : "compile_fragment"
T_KW_DECL : "decl"
T_KW_ASM : "asm"
T_KW_ASM_FRAGMENT : "asm_fragment"
T_KW_USE : "use"
T_KW_STRICT : "strict"
#id FX_PART
    T_KW_IMPORT : "import"
    T_KW_PROVIDE : "provide"
#endif
T_KW_SWITCH : "switch"
T_KW_CASE : "case"
T_KW_DEFAULT : "default"
T_KW_BREAK : "break"
#if FX_PART
    T_KW_SPAWN : "spawn"
    T_KW_DRAW : "draw"
#endif
T_KW_CONTINUE : "continue"
# T_KW_AS : "as"
T_OP_INC : "++"
T_OP_DEC : "--"
T_OP_LE : ">="
T_OP_GE : "<="
T_OP_EQ : "=="
T_OP_NE : "!="
T_OP_AND : "&&"
T_OP_OR : "||"
T_OP_ME : "*="
T_OP_DE : "/="
T_OP_RE : "%="
T_OP_AE : "+="
T_OP_SE : "-="
T_OP_SR : ">>"
T_OP_SL : "<<"
T_OP_BORE : "|="
T_OP_BANDE : "&="
T_OP_XORE : "^="
T_OP_SRE : ">>="
T_OP_SLE : "<<="
